11/1/06 Version 1.1 
--------------------

* Added capability to compute subsets of the basis functions,
  specifically:

  1) Case STU, in which there is no M function, only a single U
  function, and all necessary subsidiary functions, specifically three
  T functions, one S and one B. The B function is not involved in the
  integration and so is computed analytically.

  2) Case ST, in which there are only three T functions and one S.

  This has been accomplished by adding functions TSIL_SetParametersSTU
  and TSIL_SetParametersST, which set appropriate subsets of the
  mass-squared parameters and control which Runge-Kutta steppers are
  used.  Output functions display appropriately according to the case
  selected.  For generic cases, the STU evaluation is a factor 4-5
  faster than full evaluation, with the ST case gaining a further 20%.

  The test program has also been configured to evaluate and test these
  subset modes.  This is controlled by a compiler flag; see the
  Makefile for details.  Note that the test program expects full
  benchmark data, i.e. the input files should include all basis
  functions, like the present test data files.  The program evaluates
  subset cases and only tests the relevant results against the
  benchmark data.

* TSIL_GetFunction and TSIL_GetBoldFunction modified so that in subset 
  cases where there is only a single function of a given type (U, V,
  S, or B) only the first letter of the specification string is
  relevant. So, for example, either "U" or "Uxzuv" will work in the STU
  evaluation case.

* Eliminated some TSIL_EPSILONs in favor of the less dangerous
  TSIL_TOL, to avoid roundoff errors in certain cases.

* TSIL_IsInfinite () updated to work with gcc4, which implements more
  of the C99 standard as regards special floating point values.

* Array size 3 made explicit in prototype for TSIL_GetBoldData (in
  tsil.h), to conform to compiler standards including gcc4.

* Return type of TSIL_GetData and TSIL_GetBoldData changed from int to
  void.  Possible errors are now all handled by calls to TSIL_Error.

* README.txt updated.


2/24/06 Version 1.04
--------------------

* The function TSIL_SetParameters ()  now always calls Construct () 
  (see line 112 of initialize.c). This avoids core dumps that 
  previously could occur if isAligned() happened to evaluate to YES.

* The function rk6() now rejects the step (by setting maxerr to 10 times
  max_allowed_error) for any occurrence of non-numerical values for the 
  integrals. This avoids divergences in rare cases near thresholds involving 
  large mass hierarchies, which happened to occur abruptly without ever 
  triggering a large estimated error on a previous step.

* Calling any of the  functions TSIL_GetData(), TSIL_GetFunction (),
  TSIL_GetBoldData() or TSIL_GetBoldFunction () with an invalid identifier 
  string now results in a TSIL_Error, rather than a TSIL_Warn. 
 

8/22/05 Version 1.03
--------------------

* The code in generic.c and rk6.c has been modified to avoid taking
  too many small steps very close to threshold when roundoff errors
  begin to dominate. This avoids erroneous results and/or long computation
  times in certain cases at or very near threshold, especially when DOUBLE 
  data is used.


7/6/05 Version 1.02
-------------------

* Non-analytic cases near the lowest threshold are now treated in
  Runge-Kutta by going off the real s-axis (generic.c). Also, the
  step-size adjustment algorithm has been improved (rk6.c). These
  changes eliminate significant errors that sometimes occurred in
  certain non-analytic cases exactly at or very close to threshold,
  and eliminate some anomalously long computation times in those and
  other special cases.


2/28/05 Version 1.01
--------------------

* Error in function UnnaturalCase fixed (functions.c).

* UnnaturalCase now called after data rescaling, not before
  (evaluate.c).

* Warning messages in trilog.c updated and now produced by calls to
  TSIL_Warn (trilog.c).

* Test data files have been modified to reduce the number of trailing
  zeroes for the input parameters.  This avoids an obscure I/O problem
  that may arise with gcc v2.96 under RedHat Linux, using LONG DOUBLE
  data.

* Makefile updated with flags to control uninteresting compiler
  warnings.

Documentation Changes:

* Prototype for TSIL_Manalytic in README.txt corrected.

* Advice on suppressing TSIL warning messages added to ISSUES.txt.
